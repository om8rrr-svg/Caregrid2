# Nginx Configuration for CareGrid
# Place this in your server block or include it in your main nginx.conf

server {
    listen 80;
    listen [::]:80;
    server_name caregriduk.co.uk www.caregriduk.co.uk;
    
    # Redirect HTTP to HTTPS (uncomment if using SSL)
    # return 301 https://$server_name$request_uri;
    
    root /var/www/caregrid;
    index index.html;
    
    # Enable Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/xml+rss
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/xml
        application/xhtml+xml
        application/rss+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/font-woff
        application/font-woff2;
    
    # Enable Brotli compression (if module is available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/xml+rss
    #     application/javascript
    #     application/x-javascript
    #     application/json
    #     application/ld+json
    #     application/xml
    #     application/xhtml+xml
    #     application/rss+xml
    #     image/svg+xml
    #     font/truetype
    #     font/opentype
    #     application/vnd.ms-fontobject
    #     application/font-woff
    #     application/font-woff2;
    
    # Cache static assets
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }
    
    location ~* \.(png|jpg|jpeg|gif|svg|webp|ico)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }
    
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
    
    # HTML files - shorter cache
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
    }
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://www.gstatic.com; connect-src 'self' https://accounts.google.com https://www.gstatic.com https://vzjqrbicwhyawtsjnplt.supabase.co; frame-src 'self' https://accounts.google.com;" always;
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # API proxy (if using backend)
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}

# HTTPS server block (uncomment if using SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name caregriduk.co.uk www.caregriduk.co.uk;
#     
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Include the same configuration as HTTP block above
#     # (copy all the gzip, cache, and location blocks)
# }